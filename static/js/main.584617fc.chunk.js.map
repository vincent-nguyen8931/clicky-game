{"version":3,"sources":["components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","handleClick","console","log","App","style","display","gridTemplateColumns","gridGap","marginLeft","marginTop","characters","map","character","src","image","height","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g4BAWeA,MARf,WACE,OACE,wBAAQC,UAAU,SAAlB,SACE,kD,OCFFC,EAAc,WAChBC,QAAQC,IAAI,UAyCCC,MAtBf,WACE,OACE,oCACE,8BACE,gCAEE,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,mBAAoBC,QAAS,GAAIC,WAAY,QAASC,UAAW,QAArH,SACCC,EAAWC,KAAI,SAAAC,GAAS,OAC1B,qBAAMC,IAAKD,EAAUE,MAAOV,MAAO,CAAEW,OAAQ,SAAWC,QAAShB,SAGhE,2CACA,cAAC,EAAD,YCxBKiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.584617fc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Clicky Game</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './App.css';\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\n\nvar handleClick = () => {\n  console.log(\"hello\")\n}\n\n// randomize the id in the json by making an array with the length of the json array.\nvar randomizePicture = () => {\n  var arr = []\n  var temp, randomIndex = 0;\n  for (var i = 1; i < characters.length; i++){\n    arr.push(characters.id)\n  }\n  for (var j = 0; j < arr.length; j++){\n    randomIndex = Math.floor(Math.random() * arr.length - 1)\n    temp = arr[j];\n    arr[j+1] = temp;\n    arr[j] = randomIndex;\n  }\nreturn arr;\n}\n\nfunction App() {\n  return (\n    <container>\n      <row>\n        <div>\n          \n          <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4, 10rem)\", gridGap: 15, marginLeft: \"10rem\", marginTop: \"5rem\"}}>\n          {characters.map(character => (\n         < img src={character.image} style={{ height: \"128px\" }} onClick={handleClick}/>\n         ))}\n          </div>\n          <p>Text there</p>\n          <Footer />\n        </div>\n\n      </row>\n    </container>\n\n  );\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}